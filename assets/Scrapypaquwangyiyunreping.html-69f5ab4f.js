import{_ as e,n as o,p as c,q as i,s as n,R as s,t as p,Y as a}from"./framework-f2b64c38.js";const l={},u=a('<h2 id="起因" tabindex="-1"><a class="header-anchor" href="#起因" aria-hidden="true">#</a> 起因</h2><p>昨天写了python自动签到<br> 今天<br> 大概就想试试<strong>网抑云</strong></p><h2 id="目标" tabindex="-1"><a class="header-anchor" href="#目标" aria-hidden="true">#</a> 目标</h2><p>抓取网易云歌曲点赞1w以上热评</p><h2 id="思路" tabindex="-1"><a class="header-anchor" href="#思路" aria-hidden="true">#</a> 思路</h2><p>爬虫思路基本一致<br> 就是模拟请求<br> 研究了一下官网<br> 发现有api可以直接获取到评论 <code>https://music.163.com/weapi/comment/resource/comments/get?csrf_token=</code></p><p>携带两个参数，<strong>params</strong>和<strong>encSecKey</strong>，嗯一看就是加密的</p><img src="https://ikaros-picture.oss-cn-shenzhen.aliyuncs.com/typora/Ikaros/20201008232125.png"><img src="https://ikaros-picture.oss-cn-shenzhen.aliyuncs.com/typora/Ikaros/20201008232032.png"><p>有以上基础之后<br> 我爬取主要思路就是构造出需要的两个参数<strong>params</strong>和<strong>encSecKey</strong><br> 然后发起请求<br> 但首先我们得知道这两个参数如何生成</p><h2 id="参数获取" tabindex="-1"><a class="header-anchor" href="#参数获取" aria-hidden="true">#</a> 参数获取</h2><p>首先我们是可以很容易注意到地址栏是有携带一个<strong>songId</strong>的<br> 可以大胆猜想获取评论需要参数其中之一就是songId</p><img src="https://ikaros-picture.oss-cn-shenzhen.aliyuncs.com/typora/Ikaros/20201008232555.png"><p>我们可以从F12追踪请求调用链</p><img src="https://ikaros-picture.oss-cn-shenzhen.aliyuncs.com/typora/Ikaros/20201008232731.png"><p>可以确定基本是从这个core....js文件发起的</p><img src="https://ikaros-picture.oss-cn-shenzhen.aliyuncs.com/typora/Ikaros/20201008233218.png"><p>从浏览器打开看到做了压缩，我们复制到编辑器格式化一下<br> 并且通过搜索encSecKey看到只出现了三次</p>',18),r=n("img",{srs:"https://ikaros-picture.oss-cn-shenzhen.aliyuncs.com/typora/Ikaros/20201008233509.png"},null,-1),d=a(`<img src="https://ikaros-picture.oss-cn-shenzhen.aliyuncs.com/typora/Ikaros/20201008233532.png"><p>从两张图可以看出图一是具体生成值的地方</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// JavaScript四个关键函数</span>

<span class="token comment">// 生成长度为a随机字符串</span>
<span class="token keyword">function</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> d<span class="token punctuation">,</span>
      e<span class="token punctuation">,</span>
      b <span class="token operator">=</span> <span class="token string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;</span><span class="token punctuation">,</span>
      c <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>d <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> a <span class="token operator">&gt;</span> d<span class="token punctuation">;</span> d <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">)</span>
      <span class="token punctuation">(</span>e <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> b<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>e <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>c <span class="token operator">+=</span> b<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> c<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// AES加密，模式CBC</span>
  <span class="token keyword">function</span> <span class="token function">b</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> c <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">,</span>
      d <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;0102030405060708&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      e <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span>
      f <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span><span class="token constant">AES</span><span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> c<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">iv</span><span class="token operator">:</span> d<span class="token punctuation">,</span> <span class="token literal-property property">mode</span><span class="token operator">:</span> CryptoJS<span class="token punctuation">.</span>mode<span class="token punctuation">.</span><span class="token constant">CBC</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> f<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// RSA加密  </span>
  <span class="token keyword">function</span> <span class="token function">c</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> d<span class="token punctuation">,</span> e<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
      <span class="token function">setMaxDigits</span><span class="token punctuation">(</span><span class="token number">131</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">(</span>d <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RSAKeyPair</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">(</span>e <span class="token operator">=</span> <span class="token function">encryptedString</span><span class="token punctuation">(</span>d<span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">d</span><span class="token punctuation">(</span><span class="token parameter">d<span class="token punctuation">,</span> e<span class="token punctuation">,</span> f<span class="token punctuation">,</span> g</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> h <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token comment">// 生成随机16位字符串</span>
      i <span class="token operator">=</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
      <span class="token comment">// AES加密两次</span>
      <span class="token comment">// d、g</span>
      <span class="token punctuation">(</span>h<span class="token punctuation">.</span>encText <span class="token operator">=</span> <span class="token function">b</span><span class="token punctuation">(</span>d<span class="token punctuation">,</span> g<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">(</span>h<span class="token punctuation">.</span>encText <span class="token operator">=</span> <span class="token function">b</span><span class="token punctuation">(</span>h<span class="token punctuation">.</span>encText<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token comment">// RSA加密   </span>
      <span class="token comment">// e、f</span>
      <span class="token punctuation">(</span>h<span class="token punctuation">.</span>encSecKey <span class="token operator">=</span> <span class="token function">c</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> e<span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      h
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),k=n("br",null,null,-1),m=n("br",null,null,-1),v=n("br",null,null,-1),h=n("br",null,null,-1),b=n("br",null,null,-1),g=n("br",null,null,-1),y={href:"https://www.jianshu.com/p/069e88181488",target:"_blank",rel:"noopener noreferrer"},f=n("br",null,null,-1),_=n("strong",null,"打断点",-1),w=n("br",null,null,-1),x=n("br",null,null,-1),S=n("br",null,null,-1),I=a(`<img src="https://ikaros-picture.oss-cn-shenzhen.aliyuncs.com/typora/Ikaros/20201008234630.png"><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">两个不同api地址</p><p>我在测试的时候发现我获取热评的api地址和教程里不同<br> 我是<br><code>https://music.163.com/weapi/comment/resource/comments/get?csrf_token=</code><br> 教程里是<br><code>http://music.163.com/weapi/v1/resource/comments/R_SO_4_{}?csrf_token=</code><br> 两者的区别是参数d，即需要构造的json字符串不同<br> 这里需要注意一下，不然会报400错误</p></div><h2 id="流程" tabindex="-1"><a class="header-anchor" href="#流程" aria-hidden="true">#</a> 流程</h2><p>既然已经知道参数如何生成<br> 那么就直接用python模拟加密过程即可<br> 需要的参数只有songId<br> 我们可以和上次自动签到一样用<strong>requests</strong>模拟<br> 不过这次我使用<strong>Scrapy</strong>框架来编写代码<br> 我的基本思路是这样子的：<br> 从网易云首页出发<br> 遍历所有的a标签<br> ①遇到/song?id=就拿到其中的songId<br> 然后发请求拿到热评<br> 写入数据库mongodb<br> ②遇到其他链接就加入爬取队列继续递归获取a标签</p><h2 id="代码实现" tabindex="-1"><a class="header-anchor" href="#代码实现" aria-hidden="true">#</a> 代码实现</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 安装Scrapy</span>
pip <span class="token function">install</span> scrapy
<span class="token comment"># 创界项目</span>
scrapy startproject music163
<span class="token comment"># 创建spider</span>
scrapy genspider HotComment
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Scrapy需要编写3部分文件</p><ul><li>Spider,即我们创建的spider/HotComment.py，主要业务逻辑</li><li>Item，items.py，数据对象</li><li>pipelines.py，管道，用于进行数据清洗，数据保存等操作</li></ul>`,8),C=n("br",null,null,-1),M={href:"https://github.com/Ikarosx/Music163Comment",target:"_blank",rel:"noopener noreferrer"},q=a(`<div class="custom-container warning"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8v4"></path><path d="M12 16h.01"></path></g></svg><p class="custom-container-title">pipelines启用</p><p>pipelines编写后生效需要在settings.py设置优先级<br><code> ITEM_PIPELINES = { &#39;Music163Spider.pipelines.HotCommentPipeline&#39;: 300, &#39;Music163Spider.pipelines.MongoPipeline&#39;: 500, }</code></p></div><h2 id="运行" tabindex="-1"><a class="header-anchor" href="#运行" aria-hidden="true">#</a> 运行</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Music163Spider/Music163Spider目录下</span>
scrapy crawl HotComment 
<span class="token comment"># 暂时中断</span>
scrapy crawl HotComment <span class="token parameter variable">-s</span> <span class="token assign-left variable">JOBDIR</span><span class="token operator">=</span>crawls/HotComment
<span class="token comment"># https://docs.scrapy.org/en/latest/intro/tutorial.html</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>这种遍历方式无法遍历到所有的歌曲<br> 也许可以试试id逐个 + 1<br> 对于js的研究确实没有那么透彻<br> 加解密原来也可以这么用</p><p>写完了<br> 好像并不会觉得网抑云哈哈</p>`,6);function j(E,z){const t=o("ExternalLinkIcon");return c(),i("div",null,[u,r,d,n("p",null,[s("从以上代码我们就可以看出i是随机生成的值"),k,s(" 要生成params和encSecKey需要defg四个参数"),m,s(" 但具体是什么参数"),v,s(" 不得而知"),h,s(" 我就卡在了这里"),b,s(" 最后百度了之后"),g,s(" 参考"),n("a",y,[s("简书教程"),p(t)]),f,s(" 发现可以"),_,w,s(" 最后发现结果确实如教程所说"),x,s(" efg三个值是固定的"),S,s(" 还有一个是利用参数（songId,limit,offset等）构造起来的json字符串")]),I,n("p",null,[s("这里由于代码较多"),C,s(" 故上传到"),n("a",M,[s("github"),p(t)])]),q])}const A=e(l,[["render",j],["__file","Scrapypaquwangyiyunreping.html.vue"]]);export{A as default};
