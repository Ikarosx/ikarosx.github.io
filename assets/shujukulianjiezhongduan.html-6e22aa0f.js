import{_ as e,p as a,q as r,Y as i}from"./framework-f2b64c38.js";const n={},s=i(`<h1 id="数据库连接中断" tabindex="-1"><a class="header-anchor" href="#数据库连接中断" aria-hidden="true">#</a> 数据库连接中断</h1><h2 id="起因" tabindex="-1"><a class="header-anchor" href="#起因" aria-hidden="true">#</a> 起因</h2><p>在使用SpringBoot连接时<br> 采用Hikari连接<br> 使用以来一直陆陆续续发生了<br> No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.<br> 这类型的提示<br> 虽然重新请求之后就不会了<br> 但用户体验极差</p><h2 id="解决" tabindex="-1"><a class="header-anchor" href="#解决" aria-hidden="true">#</a> 解决</h2><p>百度一圈后都是说mysql连接默认8小时没有使用的话就会被关闭<br> 此时如果数据库连接池（比如hikari）设置的线程存活时间 &gt; 数据库的设置<br> 就会导致连接其实已经被数据库关闭了<br> 但连接池这边还以为它能用<br> 此时调用的话就会导致报该连接已经关闭的错</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 查看数据库设置,单位秒</span>
SHOW VARIABLES LIKE <span class="token string">&quot;time_waits&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>但我hikari设置默认30分钟<br> 怎么样都小于数据库的8小时。。<br> 最后经过各种查找发现了可能是防火墙的原因<br> 防火墙会判断连接空闲时间如果大于一定时间就断开它<br> 防火墙的设置是多长时间我不太清楚<br> 但我把hikari的存活时间改为3分钟<br> 报错再也没有出现过了。。。</p><p>如果使用druid的话可以通过keepAlive和validationQuery达到同样效果</p><h2 id="思考" tabindex="-1"><a class="header-anchor" href="#思考" aria-hidden="true">#</a> 思考</h2><p>maxLifeTime时间设置得太短会有很大问题吗emm</p>`,10),d=[s];function t(o,h){return a(),r("div",null,d)}const l=e(n,[["render",t],["__file","shujukulianjiezhongduan.html.vue"]]);export{l as default};
