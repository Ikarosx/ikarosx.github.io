import{_ as s,p as n,q as a,Y as e}from"./framework-f2b64c38.js";const i={},o=e(`<h1 id="mysql通过binlog恢复数据" tabindex="-1"><a class="header-anchor" href="#mysql通过binlog恢复数据" aria-hidden="true">#</a> Mysql通过binlog恢复数据</h1><h2 id="起因" tabindex="-1"><a class="header-anchor" href="#起因" aria-hidden="true">#</a> 起因</h2><p>今天上午同事在测试环境不小心执行错sql<br> 导致删除了某张表的全部数据<br> 因为是测试环境，倒也无所谓<br> 但本着学习的心态和同事讨论了一下恢复的操作</p><h2 id="过程" tabindex="-1"><a class="header-anchor" href="#过程" aria-hidden="true">#</a> 过程</h2><p>面试题大家都知道MySQL恢复可以通过binlog<br> binlog记录了MySQL操作的记录<br> 假设我们上周在A点备份了数据<br> 在今天B点执行误操作<br> 那么恢复的主要思路就是</p><pre><code>    以A点备份的数据库为基础,筛选出(A, B)时间段的binlog并执行，就可以恢复到执行错误操作之前的状态
</code></pre><h3 id="筛选出-a-b-时间段的binlog并执行" tabindex="-1"><a class="header-anchor" href="#筛选出-a-b-时间段的binlog并执行" aria-hidden="true">#</a> 筛选出(A, B)时间段的binlog并执行</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 先查看是否开启了Binlog</span>
SHOW VARIABLES LIKE <span class="token string">&quot;log_bin&quot;</span>
<span class="token comment"># 查看binlog的目录</span>
SHOW VARIABLES LIKE <span class="token string">&quot;log_bin_index&quot;</span>
<span class="token comment"># 查看当前服务器使用的biglog情况，这里会有很多个文件，当mysql重启会产生新的文件，或者单个文件大小过大也会切换，具体查看max_binlog_size</span>
SHOW BINARY LOGS
<span class="token comment"># 查看多大的binlog会产生新文件</span>
SHOW VARIABLES LIKE <span class="token string">&quot;max_binlog_size&quot;</span>
<span class="token comment"># 查看最新使用的binlog文件</span>
SHOW MASTER STATUS

<span class="token comment"># 比如我要筛选出今天9点到12点的binlog记录</span>
<span class="token comment"># 命令使用mysqlbinlog</span>
<span class="token comment"># 起止时间用--xxxx-datetime指定</span>
<span class="token comment"># mysql-bin.000060为binlog文件多个文件可以mysql-bin.*这样子</span>
<span class="token comment"># -v显示sql详细情况</span>
<span class="token comment"># &gt; demo.sql 写出到demo.sql方便分析</span>
mysqlbinlog --start-datetime<span class="token operator">=</span><span class="token string">&#39;2021-12-31 09:00:00&#39;</span> --stop-datetime<span class="token operator">=</span><span class="token string">&#39;2021-12-31 12:00:00&#39;</span> mysql-bin.000060 <span class="token parameter variable">-v</span> <span class="token operator">&gt;</span> demo.sql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="分析binlog" tabindex="-1"><a class="header-anchor" href="#分析binlog" aria-hidden="true">#</a> 分析binlog</h3><p>这个是导出的demo.sql，然后通过搜索找到执行错误的sql</p><img src="https://ikaros-picture.oss-cn-shenzhen.aliyuncs.com/typora20211231142732.png"><p>这里at后面跟着的是pos，即位置<br> 每个操作都有对应的位置<br> 所以我们主要是要找到这个开始和结束的pos</p><p>这里可以结合 <code>SHOW BINLOG EVENTS in &#39;mysql-bin.000068&#39; from 796393273;</code><br> 容易查看，from后面跟着表示查出这个pos后面的记录，所以我们找一个前一点的位置<br> 找到BEGIN那一行的Pos列，表示开始pos<br> 找到COMMIT那一行的End_log_pos，表示结束pos<br><img src="https://ikaros-picture.oss-cn-shenzhen.aliyuncs.com/typora20211231143422.png"></p><img src="https://ikaros-picture.oss-cn-shenzhen.aliyuncs.com/typora20211231143648.png"><p>这里拿到的开始pos796393369和结束pos796549025就是我们误操作的部分</p><p>一开始我以为的是只要把误操作这部分执行就可以恢复数据<br> 后来我发现我理解错了，binlog代表的是执行记录，再执行一遍也仅仅只是再执行一遍删除操作</p><p>所以正确的结束pos应该是误操作的开始pos<br> 开始pos应该是备份时间的那个记录<br> 根据上面类似的操作即可找到</p><h3 id="恢复" tabindex="-1"><a class="header-anchor" href="#恢复" aria-hidden="true">#</a> 恢复</h3><p>当我们已经确定了具体的pos后，就可以通过下面的语句恢复<br><code>mysqlbinlog --start-pos 796393369 --stop-pos 796549025 mysql-bin.000060 | mysql -uroot -p</code></p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><ol><li>备份的重要性，我们公司貌似并没有测试环境mysql的备份，所以想要恢复只能够从0开始恢复，或者是从那个表的创建时间开始</li><li>另外搞一个测试库恢复，然后再导入数据，安全一点（害怕</li></ol>`,21),l=[o];function r(t,c){return n(),a("div",null,l)}const p=s(i,[["render",r],["__file","MysqlBinloghuifushuju.html.vue"]]);export{p as default};
