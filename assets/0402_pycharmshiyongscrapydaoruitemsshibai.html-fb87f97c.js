import{_ as e,p as i,q as r,Y as c}from"./framework-f2b64c38.js";const s={},o=c('<h1 id="pycharm使用scrapy导入items失败" tabindex="-1"><a class="header-anchor" href="#pycharm使用scrapy导入items失败" aria-hidden="true">#</a> PyCharm使用Scrapy导入items失败</h1><h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景" aria-hidden="true">#</a> 背景</h2><p>最近拿出了以前写过的Scrapy项目看一下，发现以前遇到过一个问题没解决，就是在<code>from Spider import items</code>的时候会报错，提示在Spider模块中找不到items</p><img src="https://ikaros-picture.oss-cn-shenzhen.aliyuncs.com/picgo20230402110014.png"><h2 id="探究" tabindex="-1"><a class="header-anchor" href="#探究" aria-hidden="true">#</a> 探究</h2><p>在PyCharm提示报错的情况下，我在命令行输入<code>scrapy list</code>是可以得到结果的，不会报错，说明程序本身运行是没问题的（因为如果运行找不到模块的话会报错），那问题就是出在PyCharm对于模块的识别上</p><img src="https://ikaros-picture.oss-cn-shenzhen.aliyuncs.com/picgo20230402110633.png"><p>从模块的角度看一下，根本操作是我们要在<code>Music163.py</code>里面引用父模块的<code>items.py</code><br> 既然可以猜到PyCharm对于模块的识别有问题，那么可以<code>ctrl+鼠标</code>左键点击<code>from Music163Spider</code>的<code>Music163Spider</code></p><img src="https://ikaros-picture.oss-cn-shenzhen.aliyuncs.com/picgo20230402110952.png"><p>通过图片可以看到，目前PyCharm是把Music163Spider定位到了最外层的文件夹<code>Music163Spider</code><br> 在最外层的<strong>Music163Spider</strong>当然没有items，所以导入报错<br> 知道了问题那么解决起来就有思路了</p><h2 id="解决" tabindex="-1"><a class="header-anchor" href="#解决" aria-hidden="true">#</a> 解决</h2><h3 id="方案1-相对导入" tabindex="-1"><a class="header-anchor" href="#方案1-相对导入" aria-hidden="true">#</a> 方案1 相对导入</h3><p>将<code>from Music163Spider import items</code>改成<br><code>from .. import items</code><br> 原因是spiders是Music163Spider的子模块，我们想要在子模块里面引用父模块的文件<br> 可以使用<code>from ..</code>表示从父模块寻找</p><img src="https://ikaros-picture.oss-cn-shenzhen.aliyuncs.com/picgo20230402111330.png"><h3 id="方案2-修改pycharm的模块目录设置" tabindex="-1"><a class="header-anchor" href="#方案2-修改pycharm的模块目录设置" aria-hidden="true">#</a> 方案2 修改PyCharm的模块目录设置</h3><p>这样我们首先得知道PyCharm在看到from的时候是如何识别的，为什么他会定位到最外层的<code>Music163Spider</code>而不是里面的<br> 首先PyCharm会从项目根目录下找，有没有Music163Spider这个文件夹<br> 有的话就会将其当作from的Music163Spider中的位置<br> 在我们的项目中，会遍历Music163Comment下面的文件夹（注意不会递归）<br> 找到的第一个名字为Music163Spider的文件夹就是最外层的那一个，所以导入报错</p><p>做2个实验</p><ol><li>证明不会递归，将最外层的文件夹名称修改成Music163Spider2</li></ol><img src="https://ikaros-picture.oss-cn-shenzhen.aliyuncs.com/picgo20230402112217.png"><ol start="2"><li>新建一个Music163Spider，理论上会指向这个新的文件夹，因为同名</li></ol><img src="https://ikaros-picture.oss-cn-shenzhen.aliyuncs.com/picgo20230402112309.png"><p>那解决方向可以有2个</p><ol><li>修改第一个Music163Spider的名称，但默认情况下<code>scrapy startproject</code>创建的文件夹就是同名的，这样子感觉不是很优雅</li><li>从根目录入手，修改根目录的指向到外层的Music163Spider文件夹，就可以使得搜索的时候第一个搜索到的是内层的Music163Spider</li></ol><p>第二种方向（从根目录入手）有2种实现方式</p><ol><li>打开项目的时候指定第一个Music163Spider文件夹为根目录，但灵活性不强，如果我外层也有文件（Music163Comment下面有别的文件），就看不到</li><li>通过指定sources root改变根目录指向（可能需要重启PyCharm使索引更新）</li></ol><img src="https://ikaros-picture.oss-cn-shenzhen.aliyuncs.com/picgo20230402114212.png"><img src="https://ikaros-picture.oss-cn-shenzhen.aliyuncs.com/picgo20230402114447.png"><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>在写这篇文章的时候了解了一下python的模块，知道了相对导入，也加深了对于source root的理解，在idea里同样可以适用，概念是通用的。</p>',29),a=[o];function p(d,h){return i(),r("div",null,a)}const n=e(s,[["render",p],["__file","0402_pycharmshiyongscrapydaoruitemsshibai.html.vue"]]);export{n as default};
