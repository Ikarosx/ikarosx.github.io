import{_ as a,p as e,q as s,Y as n}from"./framework-f2b64c38.js";const r={},l=n(`<h2 id="起因" tabindex="-1"><a class="header-anchor" href="#起因" aria-hidden="true">#</a> 起因</h2><p>因为要使用maven打包SpringBoot项目为docker镜像并上传到远程服务器<br> 跟着教程开了2375端口<br> 结果在某一天收到了告警<br> cpu占用100%<br> 交了工单后</p><img src="https://ikaros-picture.oss-cn-shenzhen.aliyuncs.com/typora/Ikaros/20200812123117.png"><p>给大佬点赞<br> 给菜鸡踩踩（我）</p><p>默认开启2375端口是无认证的，这样子就很不安全<br> 实际上我们应该使用TLS传输并使用CA认证</p><h2 id="目标" tabindex="-1"><a class="header-anchor" href="#目标" aria-hidden="true">#</a> 目标</h2><p>开启docker TLS</p><h2 id="生成ca密钥和证书" tabindex="-1"><a class="header-anchor" href="#生成ca密钥和证书" aria-hidden="true">#</a> 生成CA密钥和证书</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 创建CA证书私钥</span>
<span class="token comment"># genrsa 生成rsa私钥</span>
<span class="token comment"># -aes256 指定加密方式为aes256</span>
<span class="token comment"># -out 输出文件名   </span>
<span class="token comment"># 4096 生成4096bit的私钥</span>
openssl genrsa <span class="token parameter variable">-aes256</span> <span class="token parameter variable">-out</span> ca-key.pem <span class="token number">4096</span>
<span class="token comment"># 根据私钥创建CA证书</span>
<span class="token comment"># req 证书请求和生成的工具</span>
<span class="token comment"># -new 生成一个新的证书请求，提示让用户输入相关的字段，字段的配置在配置文件和其他的扩展里</span>
<span class="token comment"># -x509 输出自签证书而不是证书请求</span>
<span class="token comment"># -days 当使用-x509选项时，此选项指定要为其验证证书的天数。默认值为30天</span>
<span class="token comment"># -key 指定要读取私钥的地方</span>
<span class="token comment"># -sha256 指定用于签名的摘要算法，可以使用openssl dgst -h 查看所有可用的</span>
openssl req <span class="token parameter variable">-new</span> <span class="token parameter variable">-x509</span> <span class="token parameter variable">-days</span> <span class="token number">365</span> <span class="token parameter variable">-key</span> ca-key.pem <span class="token parameter variable">-sha256</span> <span class="token parameter variable">-out</span> ca.pem
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="生成服务器密钥和证书签名请求-csr" tabindex="-1"><a class="header-anchor" href="#生成服务器密钥和证书签名请求-csr" aria-hidden="true">#</a> 生成服务器密钥和证书签名请求(CSR)</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 生成服务器私钥</span>
openssl genrsa <span class="token parameter variable">-out</span> server-key.pem <span class="token number">4096</span>
<span class="token comment"># 生成证书签名请求(CSR)</span>
openssl req <span class="token parameter variable">-sha256</span> <span class="token parameter variable">-new</span> <span class="token parameter variable">-key</span> server-key.pem <span class="token parameter variable">-out</span> server.csr
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="创建ca证书签名好的服务端证书" tabindex="-1"><a class="header-anchor" href="#创建ca证书签名好的服务端证书" aria-hidden="true">#</a> 创建CA证书签名好的服务端证书</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>openssl x509 <span class="token parameter variable">-req</span> <span class="token parameter variable">-days</span> <span class="token number">365</span> <span class="token parameter variable">-sha256</span> <span class="token parameter variable">-in</span> server.csr <span class="token parameter variable">-CA</span> ca.pem <span class="token parameter variable">-CAkey</span> ca-key.pem <span class="token parameter variable">-CAcreateserial</span> <span class="token parameter variable">-out</span> server-cert.pem
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="创建客户端密钥及签名" tabindex="-1"><a class="header-anchor" href="#创建客户端密钥及签名" aria-hidden="true">#</a> 创建客户端密钥及签名</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># </span>
openssl genrsa <span class="token parameter variable">-out</span> key.pem <span class="token number">4096</span>
<span class="token comment"># 签名</span>
openssl req <span class="token parameter variable">-new</span> <span class="token parameter variable">-key</span> key.pem <span class="token parameter variable">-out</span> client.csr
<span class="token comment"># 创建配置文件</span>
<span class="token builtin class-name">echo</span> <span class="token assign-left variable">extendedKeyUsage</span><span class="token operator">=</span>clientAuth <span class="token operator">&gt;</span> extfile.cnf
<span class="token comment"># 签名</span>
openssl x509 <span class="token parameter variable">-req</span> <span class="token parameter variable">-days</span> <span class="token number">1000</span> <span class="token parameter variable">-sha256</span> <span class="token parameter variable">-in</span> client.csr <span class="token parameter variable">-CA</span> ca.pem <span class="token parameter variable">-CAkey</span> ca-key.pem <span class="token parameter variable">-CAcreateserial</span> <span class="token parameter variable">-out</span> cert.pem <span class="token parameter variable">-extfile</span> extfile.cnf
<span class="token comment"># 删除多余文件</span>
<span class="token function">rm</span> <span class="token parameter variable">-rf</span> ca.srl client.csr extfile.cnf server.csr
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="修改docker服务" tabindex="-1"><a class="header-anchor" href="#修改docker服务" aria-hidden="true">#</a> 修改docker服务</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /lib/systemd/system/docker.service
<span class="token comment"># 修改ExecStart=/usr/bin/dockerd</span>
<span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/usr/bin/dockerd <span class="token parameter variable">--tlsverify</span> <span class="token parameter variable">--tlscacert</span><span class="token operator">=</span>/ssl/ca.pem <span class="token parameter variable">--tlscert</span><span class="token operator">=</span>/ssl/server-cert.pem <span class="token parameter variable">--tlskey</span><span class="token operator">=</span>/ssl/server-key.pem <span class="token parameter variable">-H</span> tcp://0.0.0.0:2376 <span class="token parameter variable">-H</span> unix:///var/run/docker.sock
<span class="token comment"># 重启后台</span>
systemctl daemon-reload
<span class="token comment"># 重启docker</span>
systemctl restart <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="复制证书文件到客户端" tabindex="-1"><a class="header-anchor" href="#复制证书文件到客户端" aria-hidden="true">#</a> 复制证书文件到客户端</h2><p>/ssl/ca.pem /ssl/cert.pem /ssl/key.pem</p><h2 id="docker测试" tabindex="-1"><a class="header-anchor" href="#docker测试" aria-hidden="true">#</a> docker测试</h2><p>docker --tlsverify --tlscacert=ca.pem --tlscert=cert.pem --tlskey=key.pem -H tcp://ip:2376 version</p><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">dockerfile-maven</p><p>需要修改环境变量<br> DOCKER_HOST<br> DOCKER_CERT_PATH</p></div>`,22),c=[l];function i(t,p){return e(),s("div",null,c)}const d=a(r,[["render",i],["__file","DockerkaiqiTLS.html.vue"]]);export{d as default};
